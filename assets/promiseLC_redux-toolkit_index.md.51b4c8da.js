import{_ as n,c as s,o as a,d as t}from"./app.0cb80d29.js";const g='{"title":"redux and redux-toolkit","description":"","frontmatter":{},"headers":[{"level":2,"title":"Redux API\u6982\u5FF5","slug":"redux-api\u6982\u5FF5"},{"level":2,"title":"redux \u5B8C\u6574\u5DE5\u4F5C\u6D41","slug":"redux-\u5B8C\u6574\u5DE5\u4F5C\u6D41"},{"level":2,"title":"Thunk","slug":"thunk"},{"level":2,"title":"Redux-tookit API\u6982\u5FF5","slug":"redux-tookit-api\u6982\u5FF5"},{"level":2,"title":"\u4F7F\u7528redux-toolkit","slug":"\u4F7F\u7528redux-toolkit"},{"level":3,"title":"\u521B\u5EFAcreateSlice","slug":"\u521B\u5EFAcreateslice"},{"level":3,"title":"\u521B\u5EFAStore","slug":"\u521B\u5EFAstore"},{"level":3,"title":"\u91CD\u65B0\u7F16\u5199useDispatch useSelector","slug":"\u91CD\u65B0\u7F16\u5199usedispatch-useselector"},{"level":3,"title":"\u5728\u9875\u9762\u4E2D\u4F7F\u7528","slug":"\u5728\u9875\u9762\u4E2D\u4F7F\u7528"}],"relativePath":"promiseLC/redux-toolkit/index.md","lastUpdated":1642996261784}',p={},o=t(`<h1 id="redux-and-redux-toolkit" tabindex="-1">redux and redux-toolkit <a class="header-anchor" href="#redux-and-redux-toolkit" aria-hidden="true">#</a></h1><h1 id="redux" tabindex="-1">redux <a class="header-anchor" href="#redux" aria-hidden="true">#</a></h1><p><strong>Redux \u7684\u9002\u7528\u573A\u666F\uFF1A\u591A\u4EA4\u4E92\u3001\u591A\u6570\u636E\u6E90\u3002</strong></p><blockquote><p>\u4ECE\u7EC4\u4EF6\u89D2\u5EA6\u770B\uFF0C\u5982\u679C\u4F60\u7684\u5E94\u7528\u6709\u4EE5\u4E0B\u573A\u666F\uFF0C\u53EF\u4EE5\u8003\u8651\u4F7F\u7528 Redux\u3002</p><ul><li>\u67D0\u4E2A\u7EC4\u4EF6\u7684\u72B6\u6001\uFF0C\u9700\u8981\u5171\u4EAB</li><li>\u67D0\u4E2A\u72B6\u6001\u9700\u8981\u5728\u4EFB\u4F55\u5730\u65B9\u90FD\u53EF\u4EE5\u62FF\u5230</li><li>\u4E00\u4E2A\u7EC4\u4EF6\u9700\u8981\u6539\u53D8\u5168\u5C40\u72B6\u6001</li><li>\u4E00\u4E2A\u7EC4\u4EF6\u9700\u8981\u6539\u53D8\u53E6\u4E00\u4E2A\u7EC4\u4EF6\u7684\u72B6\u6001</li></ul></blockquote><h2 id="redux-api\u6982\u5FF5" tabindex="-1">Redux API\u6982\u5FF5 <a class="header-anchor" href="#redux-api\u6982\u5FF5" aria-hidden="true">#</a></h2><ol><li><p><strong>Store \u5C31\u662F\u4FDD\u5B58\u6570\u636E\u7684\u5730\u65B9\uFF0C\u4F60\u53EF\u4EE5\u628A\u5B83\u770B\u6210\u4E00\u4E2A\u5BB9\u5668\u3002\u6574\u4E2A\u5E94\u7528\u53EA\u80FD\u6709\u4E00\u4E2A Store\u3002</strong></p><blockquote><p><strong>Redux \u63D0\u4F9BcreateStore\u8FD9\u4E2A\u51FD\u6570\uFF0C\u7528\u6765\u751F\u6210 Store\u3002</strong></p><ol><li>Store.getState() \u83B7\u53D6Store\u4E2D\u7684state\u6570\u636E</li><li>Store.dispatch() dispatch(Action) \u89E6\u53D1\u5BF9\u5E94Reducer\u6539\u53D8state\u7684\u503C</li></ol></blockquote><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;redux&#39;</span><span class="token punctuation">;</span>
<span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> createStore \u63A5\u53D7\u7B2C\u4E00\u4E2A\u53C2\u6570\u4E3A reducer \u5BF9\u8C61 <span class="token punctuation">,</span>\u7B2C\u4E8C\u4E2A\u53C2\u6570\u4E3A \u4E2D\u95F4\u4EF6\u7684\u5E94\u7528 <span class="token operator">--</span><span class="token operator">&gt;</span>
<span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p><strong>Action \u662F\u4E00\u4E2A\u5BF9\u8C61\u3002\u5176\u4E2D\u7684type\u5C5E\u6027\u662F\u5FC5\u987B\u7684\uFF0C\u8868\u793A Action \u7684\u540D\u79F0\u3002\u5176\u4ED6\u5C5E\u6027\u53EF\u4EE5\u81EA\u7531\u8BBE\u7F6E</strong></p><div class="language-js"><pre><code><span class="token keyword">const</span> action <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;counter/incremented&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">payload</span><span class="token operator">:</span> <span class="token string">&#39;Learn Redux&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p><strong>Reducer \u662F\u4E00\u4E2A\u51FD\u6570\uFF0C\u5B83\u63A5\u53D7 Action \u548C\u5F53\u524D State \u4F5C\u4E3A\u53C2\u6570\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 State</strong></p><blockquote><p>\u4E00\u822C\u6570\u7528switch \u53BB\u5224\u65AD action\u7684 type \u7136\u540E\u505A\u51FA\u5BF9\u5E94\u7684\u64CD\u4F5C,\u4FEE\u6539state\u7684\u503C</p></blockquote><blockquote><p>reducer\u7684\u89C4\u5219</p><ul><li>\u4EC5\u4F7F\u7528 state \u548C action \u53C2\u6570\u8BA1\u7B97\u65B0\u7684\u72B6\u6001\u503C</li><li>\u7981\u6B62\u76F4\u63A5\u4FEE\u6539 state\u3002\u5FC5\u987B\u901A\u8FC7\u590D\u5236\u73B0\u6709\u7684 state \u5E76\u5BF9\u590D\u5236\u7684\u503C\u8FDB\u884C\u66F4\u6539 \u7684\u65B9\u5F0F\u6765\u505A \u4E0D\u53EF\u53D8\u66F4\u65B0\uFF08immutable updates\uFF09</li><li>\u7981\u6B62\u4EFB\u4F55\u5F02\u6B65\u903B\u8F91\u3001\u4F9D\u8D56\u968F\u673A\u503C\u6216\u5BFC\u81F4\u5176\u4ED6\u201C\u526F\u4F5C\u7528\u201D\u7684\u4EE3\u7801</li></ul></blockquote><div class="language-js"><pre><code><span class="token keyword">function</span> <span class="token function">counterReducer</span><span class="token punctuation">(</span><span class="token parameter">state <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&#39;counter/incremented&#39;</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> state<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span>
    <span class="token keyword">case</span> <span class="token string">&#39;counter/decremented&#39;</span><span class="token operator">:</span>
      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> state<span class="token punctuation">.</span>value <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">}</span>
    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">return</span> state
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> 
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div></li></ol><h2 id="redux-\u5B8C\u6574\u5DE5\u4F5C\u6D41" tabindex="-1">redux \u5B8C\u6574\u5DE5\u4F5C\u6D41 <a class="header-anchor" href="#redux-\u5B8C\u6574\u5DE5\u4F5C\u6D41" aria-hidden="true">#</a></h2><div class="language-js"><pre><code>
  <span class="token keyword">import</span> <span class="token punctuation">{</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;redux&#39;</span>

      <span class="token keyword">function</span> <span class="token function">counterReducer</span><span class="token punctuation">(</span><span class="token parameter">state <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">switch</span> <span class="token punctuation">(</span>action<span class="token punctuation">.</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          <span class="token keyword">case</span> <span class="token string">&#39;counter/incremented&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> state<span class="token punctuation">.</span>value <span class="token operator">+</span> <span class="token number">1</span> <span class="token punctuation">}</span>
          <span class="token keyword">case</span> <span class="token string">&#39;counter/decremented&#39;</span><span class="token operator">:</span>
            <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> state<span class="token punctuation">.</span>value <span class="token operator">-</span> <span class="token number">1</span> <span class="token punctuation">}</span>
          <span class="token keyword">default</span><span class="token operator">:</span>
            <span class="token keyword">return</span> state
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// Its API is { subscribe, dispatch, getState }.</span>
      <span class="token keyword">let</span> store <span class="token operator">=</span> <span class="token function">createStore</span><span class="token punctuation">(</span>counterReducer<span class="token punctuation">)</span>

      store<span class="token punctuation">.</span><span class="token function">subscribe</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>store<span class="token punctuation">.</span><span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

      store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;counter/incremented&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token comment">// {value: 1}</span>
      store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;counter/incremented&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token comment">// {value: 2}</span>
      store<span class="token punctuation">.</span><span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;counter/decremented&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
      <span class="token comment">// {value: 1}  </span>

</code></pre></div><h2 id="thunk" tabindex="-1">Thunk <a class="header-anchor" href="#thunk" aria-hidden="true">#</a></h2><blockquote><p><strong>Redux \u4F7F\u7528\u53EB\u505A\u201C\u4E2D\u95F4\u4EF6\u201D\u8FD9\u6837\u7684\u63D2\u4EF6\u6A21\u5F0F\u6765\u5F00\u53D1\u5F02\u6B65\u903B\u8F91\u5B98\u65B9\u7684\u5904\u7406\u5F02\u6B65\u4E2D\u95F4\u4EF6\u53EB redux-thunk\uFF0C\u5305\u542B\u5728 Redux Toolkit \u4E2D</strong></p><ul><li>\u60A8\u53EF\u4EE5 dispatch \u5176\u4ED6 action \u6765\u5E2E\u52A9\u8DDF\u8E2A API \u8C03\u7528\u7684\u52A0\u8F7D\u72B6\u6001</li></ul></blockquote><div class="language-js"><pre><code>  <span class="token keyword">const</span> <span class="token function-variable function">asyncAction</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">(</span><span class="token parameter">dispatch<span class="token punctuation">,</span>getState</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
      <span class="token comment">// \u5F02\u6B65\u64CD\u4F5C.....</span>
    <span class="token comment">// \u83B7\u53D6Store\u4E2D\u7684\u6570\u636E--&gt;state</span>
    <span class="token keyword">const</span> state <span class="token operator">=</span> <span class="token function">getState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">\u540C\u6B65action</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
</code></pre></div><h1 id="redux-tookit" tabindex="-1">Redux-tookit <a class="header-anchor" href="#redux-tookit" aria-hidden="true">#</a></h1><h2 id="redux-tookit-api\u6982\u5FF5" tabindex="-1">Redux-tookit API\u6982\u5FF5 <a class="header-anchor" href="#redux-tookit-api\u6982\u5FF5" aria-hidden="true">#</a></h2><ol><li><strong>configureStore(): \u5305\u88C5 createStore \u4EE5\u63D0\u4F9B\u7B80\u5316\u7684\u914D\u7F6E\u9009\u9879\u548C\u826F\u597D\u7684\u9ED8\u8BA4\u9884\u8BBE\u3002\u5B83\u53EF\u4EE5\u81EA\u52A8\u7EC4\u5408\u4F60\u7684\u5207\u7247 reducers\uFF0C\u6DFB\u52A0\u60A8\u63D0\u4F9B\u7684\u4EFB\u4F55 Redux \u4E2D\u95F4\u4EF6\uFF0C\u9ED8\u8BA4\u60C5\u51B5\u4E0B\u5305\u542B redux-thunk \uFF0C\u5E76\u5141\u8BB8\u4F7F\u7528 Redux DevTools \u6269\u5C55\u3002</strong></li></ol><hr><ol start="2"><li><strong>createReducer(): \u4E3A case reducer \u51FD\u6570\u63D0\u4F9B action \u7C7B\u578B\u7684\u67E5\u627E\u8868\uFF0C\u800C\u4E0D\u662F\u7F16\u5199switch\u8BED\u53E5\u3002\u6B64\u5916\uFF0C\u5B83\u4F1A\u81EA\u52A8\u4F7F\u7528immer \u5E93\u6765\u8BA9\u60A8\u4F7F\u7528\u666E\u901A\u7684\u53EF\u53D8\u4EE3\u7801\u7F16\u5199\u66F4\u7B80\u5355\u7684 immutable \u66F4\u65B0\uFF0C\u4F8B\u5982 state.todos [3] .completed = true \u3002</strong></li></ol><hr><ol start="3"><li><strong>createAction(): \u4E3A\u7ED9\u5B9A\u7684 action type string \u751F\u6210\u4E00\u4E2Aaction creator \u51FD\u6570\u3002\u51FD\u6570\u672C\u8EAB\u5B9A\u4E49\u4E86 toString()\uFF0C\u56E0\u6B64\u5B83\u53EF\u4EE5\u7528\u6765\u4EE3\u66FF type \u5E38\u91CF\u3002</strong></li></ol><hr><ol start="4"><li><strong>createSlice(): \u63A5\u53D7\u4E00\u4E2A reducer \u51FD\u6570\u7684\u5BF9\u8C61\u3001\u5206\u7247\u540D\u79F0\u548C\u521D\u59CB\u72B6\u6001\u503C\uFF0C\u5E76\u4E14\u81EA\u52A8\u751F\u6210\u5177\u6709\u76F8\u5E94 action creators \u548C action \u7C7B\u578B\u7684\u5206\u7247reducer\u3002</strong></li></ol><blockquote><p>Redux Toolkit \u6709\u4E00\u4E2A\u540D\u4E3A createSlice \u7684\u51FD\u6570\uFF0C\u5B83\u8D1F\u8D23\u751F\u6210 action \u7C7B\u578B\u5B57\u7B26\u4E32\u3001action creator \u51FD\u6570\u548C action \u5BF9\u8C61\u7684\u5DE5\u4F5C\u3002\u60A8\u6240\u8981\u505A\u7684\u5C31\u662F\u4E3A\u8FD9\u4E2A\u5207\u7247\u5B9A\u4E49\u4E00\u4E2A\u540D\u79F0\uFF0C\u7F16\u5199\u4E00\u4E2A\u5305\u542B reducer \u51FD\u6570\u7684\u5BF9\u8C61\uFF0C\u5B83\u4F1A\u81EA\u52A8\u751F\u6210\u76F8\u5E94\u7684 action \u4EE3\u7801\u3002name \u9009\u9879\u7684\u5B57\u7B26\u4E32\u7528\u4F5C\u6BCF\u4E2A action \u7C7B\u578B\u7684\u7B2C\u4E00\u90E8\u5206\uFF0C\u6BCF\u4E2A reducer \u51FD\u6570\u7684\u952E\u540D\u7528\u4F5C\u7B2C\u4E8C\u90E8\u5206\u3002\u56E0\u6B64\uFF0C&quot;counter&quot; \u540D\u79F0 + &quot;increment&quot; reducer \u51FD\u6570\u751F\u6210\u4E86\u4E00\u4E2A action \u7C7B\u578B {type: &quot;counter/increment&quot;}\u3002\uFF08\u6BD5\u7ADF\uFF0C\u5982\u679C\u8BA1\u7B97\u673A\u53EF\u4EE5\u4E3A\u6211\u4EEC\u505A\uFF0C\u4E3A\u4EC0\u4E48\u8981\u624B\u5199\uFF01\uFF09</p></blockquote><hr><ol start="5"><li><strong>createAsyncThunk: \u63A5\u53D7\u4E00\u4E2A action type string \u548C\u4E00\u4E2A\u8FD4\u56DE promise \u7684\u51FD\u6570\uFF0C\u5E76\u751F\u6210\u4E00\u4E2A\u53D1\u8D77\u57FA\u4E8E\u8BE5 promise \u7684pending/fulfilled/rejected action \u7C7B\u578B\u7684 thunk\u3002</strong></li></ol><blockquote><p><strong>createAsyncThunk \u63A5\u65362\u4E2A\u53C2\u6570:</strong></p><ol><li>\u5C06\u7528\u4F5C\u751F\u6210\u7684 action \u7C7B\u578B\u7684\u524D\u7F00\u7684\u5B57\u7B26\u4E32</li><li>\u4E00\u4E2A\u201Cpayload creator\u201D\u56DE\u8C03\u51FD\u6570\uFF0C\u5B83\u5E94\u8BE5\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u4E00\u4E9B\u6570\u636E\u7684 Promise\uFF0C\u6216\u8005\u4E00\u4E2A\u88AB\u62D2\u7EDD\u7684\u5E26\u6709\u9519\u8BEF\u7684 Promise</li></ol></blockquote><hr><ol start="6"><li><strong>createEntityAdapter: \u751F\u6210\u4E00\u7EC4\u53EF\u91CD\u7528\u7684 reducers \u548C selectors\uFF0C\u4EE5\u7BA1\u7406\u5B58\u50A8\u4E2D\u7684\u89C4\u8303\u5316\u6570\u636E</strong></li></ol><hr><h2 id="\u4F7F\u7528redux-toolkit" tabindex="-1">\u4F7F\u7528redux-toolkit <a class="header-anchor" href="#\u4F7F\u7528redux-toolkit" aria-hidden="true">#</a></h2><h3 id="\u521B\u5EFAcreateslice" tabindex="-1">\u521B\u5EFAcreateSlice <a class="header-anchor" href="#\u521B\u5EFAcreateslice" aria-hidden="true">#</a></h3><blockquote><p><strong>createSlice</strong></p></blockquote><blockquote><p><strong>createAsyncThunk</strong></p></blockquote><div class="language-js"><pre><code>
<span class="token keyword">import</span> <span class="token punctuation">{</span>createSlice <span class="token punctuation">,</span> createAsyncThunk<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@redux/toolkit&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> asyncThunk <span class="token operator">=</span> <span class="token function">createAsyncThunk</span><span class="token punctuation">(</span><span class="token string">&#39;about/aboutThunk&#39;</span><span class="token punctuation">,</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">init</span><span class="token operator">:</span>string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> axios<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;case/initCreateCase&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> response
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> postsSlice <span class="token operator">=</span> <span class="token function">createSlice</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;posts&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">initialState</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">value</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token literal-property property">text</span><span class="token operator">:</span><span class="token string">&#39;\u4F7F\u7528createSlice \u53CA createAsyncThunk&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">reducers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">postAdded</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function">reducer</span><span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        state<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>action<span class="token punctuation">.</span>payload<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token comment">// \u63A5\u53D7\u53C2\u6570,\u5148\u8FD0\u884C\u7136\u540E\u8FD4\u56DE\u7ED9reducer\u4E2D\u7684action.payload</span>
      <span class="token function">prepare</span><span class="token punctuation">(</span><span class="token parameter">title<span class="token punctuation">,</span> content</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token punctuation">{</span>
          <span class="token literal-property property">payload</span><span class="token operator">:</span> <span class="token punctuation">{</span>
            <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token function">nanoid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
            title<span class="token punctuation">,</span>
            content
          <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// other reducers here</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">extraReducers</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// &#39;about/aboutThunk/pending&#39;: (state, action) =&gt; {</span>
    <span class="token comment">//   console.log(&#39;\u5F00\u59CB----&gt;&#39;,action)</span>
    <span class="token comment">// },</span>
    <span class="token punctuation">[</span>aboutThunk<span class="token punctuation">.</span>pending<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      state<span class="token punctuation">.</span>status <span class="token operator">=</span> <span class="token string">&#39;\u5F00\u59CB&#39;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u5F00\u59CB&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;about/aboutThunk/fulfilled&#39;</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\u6210\u529F-----&gt;&#39;</span><span class="token punctuation">,</span>action<span class="token punctuation">)</span>
      state<span class="token punctuation">.</span>status <span class="token operator">=</span> action<span class="token punctuation">.</span>payload<span class="token punctuation">.</span>msg
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token string-property property">&#39;about/aboutThunk/rejected&#39;</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">state<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      state<span class="token punctuation">.</span>status<span class="token operator">=</span><span class="token string">&#39;\u5931\u8D25&#39;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
   
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> postsSlice<span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token punctuation">{</span>postAdded <span class="token punctuation">}</span> <span class="token operator">=</span> postsSlice<span class="token punctuation">.</span>action<span class="token punctuation">;</span>

<span class="token comment">// thunk\u5F02\u6B65\u51FD\u6570</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">asyncAddCount</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">org</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">repo</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">dispatch</span><span class="token operator">:</span> Dispatch</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">dispatch</span><span class="token punctuation">(</span><span class="token function">postAdded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre></div><h3 id="\u521B\u5EFAstore" tabindex="-1">\u521B\u5EFAStore <a class="header-anchor" href="#\u521B\u5EFAstore" aria-hidden="true">#</a></h3><blockquote><p><strong>configureStore</strong></p></blockquote><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> configureStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@reduxjs/toolkit&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> postsSlice <span class="token keyword">from</span> <span class="token string">&#39;../pages/app/model&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// {</span>
<span class="token comment">//   status: &#39;idle&#39; | &#39;loading&#39; | &#39;succeeded&#39; | &#39;failed&#39;,</span>
<span class="token comment">//   error: string | null</span>
<span class="token comment">// }</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> store <span class="token operator">=</span> <span class="token function">configureStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">reducer</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">posts</span><span class="token operator">:</span> postsSlice<span class="token punctuation">.</span>reducer<span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Infer the \`RootState\` and \`AppDispatch\` types from the store itself</span>
<span class="token keyword">export</span> type RootState <span class="token operator">=</span> ReturnType<span class="token operator">&lt;</span><span class="token keyword">typeof</span> store<span class="token punctuation">.</span>getState<span class="token operator">&gt;</span><span class="token punctuation">;</span>
<span class="token comment">// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}</span>
<span class="token keyword">export</span> type AppDispatch <span class="token operator">=</span> <span class="token keyword">typeof</span> store<span class="token punctuation">.</span>dispatch<span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> store<span class="token punctuation">;</span>
</code></pre></div><h3 id="\u91CD\u65B0\u7F16\u5199usedispatch-useselector" tabindex="-1">\u91CD\u65B0\u7F16\u5199useDispatch useSelector <a class="header-anchor" href="#\u91CD\u65B0\u7F16\u5199usedispatch-useselector" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> TypedUseSelectorHook<span class="token punctuation">,</span> useDispatch<span class="token punctuation">,</span> useSelector <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react-redux&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span>  <span class="token punctuation">{</span> RootState<span class="token punctuation">,</span> AppDispatch <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./index&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// \u4F7F\u7528ts\u65F6,\u5728\u9875\u9762\u4E2D\u4F7F\u7528state\u4F1A\u81EA\u52A8\u6DFB\u52A0\u7C7B\u578B</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">useAppDispatch</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> useDispatch<span class="token operator">&lt;</span>AppDispatch<span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token literal-property property">useAppSelector</span><span class="token operator">:</span> TypedUseSelectorHook<span class="token operator">&lt;</span>RootState<span class="token operator">&gt;</span> <span class="token operator">=</span> useSelector
</code></pre></div><h3 id="\u5728\u9875\u9762\u4E2D\u4F7F\u7528" tabindex="-1">\u5728\u9875\u9762\u4E2D\u4F7F\u7528 <a class="header-anchor" href="#\u5728\u9875\u9762\u4E2D\u4F7F\u7528" aria-hidden="true">#</a></h3><div class="language-js"><pre><code>
<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span> useState<span class="token punctuation">,</span> useEffect<span class="token punctuation">,</span> <span class="token constant">FC</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;react&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> useAppDispatch<span class="token punctuation">,</span> useAppSelector <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;../../store/reduxHooks&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> postAdded <span class="token punctuation">,</span>asyncThunk<span class="token punctuation">,</span> asyncAddCount <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./model/index&#39;</span><span class="token punctuation">;</span>


type Iprops <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> string <span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token literal-property property">GetComponent</span><span class="token operator">:</span> <span class="token constant">FC</span><span class="token operator">&lt;</span>Iprops<span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> name <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">[</span>propsName<span class="token punctuation">,</span> setName<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> dispatch <span class="token operator">=</span> <span class="token function">useAppDispatch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">useAppSelector</span><span class="token punctuation">(</span><span class="token parameter">state</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>posts<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> text <span class="token operator">=</span> <span class="token function">useAppSelector</span><span class="token punctuation">(</span><span class="token parameter">state</span> <span class="token operator">=&gt;</span> state<span class="token punctuation">.</span>posts<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> <span class="token punctuation">(</span>
    <span class="token operator">&lt;</span>div className<span class="token operator">=</span><span class="token string">&quot;app&quot;</span><span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span>value<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>div<span class="token operator">&gt;</span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>div onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token function">useAppDispatch</span><span class="token punctuation">(</span><span class="token function">postAdded</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">&gt;</span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>div onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token function">useAppDispatch</span><span class="token punctuation">(</span><span class="token function">asyncThunk</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">&gt;</span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
      <span class="token operator">&lt;</span>div onClick<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span><span class="token function">useAppDispatch</span><span class="token punctuation">(</span><span class="token function">asyncAddCount</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">&gt;</span><span class="token punctuation">{</span>text<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span>
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">export</span> <span class="token keyword">default</span> GetComponent<span class="token punctuation">;</span>

</code></pre></div><h1 id="\u53C2\u8003\u6587\u732E" tabindex="-1">\u53C2\u8003\u6587\u732E <a class="header-anchor" href="#\u53C2\u8003\u6587\u732E" aria-hidden="true">#</a></h1><p>\u962E\u4E00\u5CF0: <a href="https://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html" target="_blank" rel="noopener noreferrer">https://www.ruanyifeng.com/blog/2016/09/redux_tutorial_part_one_basic_usages.html</a></p>`,41),e=[o];function c(l,r,u,k,i,d){return a(),s("div",null,e)}var h=n(p,[["render",c]]);export{g as __pageData,h as default};
